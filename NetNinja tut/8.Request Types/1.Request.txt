                                    1.Request

GET ---> Request to get a resource.
POST ---> request to create new Data{eg :  new blog}
DELETE ---> request to delete a data(eg : delete ablog)
PUT -----> request to update the Data (eg : update the blog)

we use the same routes for the GET and POST request (eg /blogs for both GET and POST).

/blogs      --->      GET   -->     to display all the blogs
/blogs/form   -->     GET   -->     to get the form page to upload the data.
/blogs      --->     POST   -->     to post the data into the Db
/blogs/:id    -->    GET  -->     to get the single blog  
/blogs/:id    -->   DELETE  -->     to delete the blog  
//////////////////////////////////////////////////////////////////
POsting the Data in the Db

In views/Create.html

<form action='/blogs' method="POST>
    <input type='text' name='title'/>
    <input type='text' name='snipper'/>
    <input type='text' name='body'/>
    <button >submit</button>
</form>

IN app.js
app.use(express.urlencoded({extended : true}))//decoded the data in the url and send it to the req obj.
    app.post('/blogs', (req,res) =>{
        const blog = new Blog({
            title : req.body.title,
             : req.body.snippet,
             : req.body.body,
        })
        blog.save().then(() => {
            console.log('added');
            res.redirect('/blogs');
        }).catch(err => console.log(err))
    })

/////////////////////////////////////////////////////////////////////////

getting the single blog based on the ID:
    In app.js
        app.get('/blogs/:id', (req,res) =>{
            const id = req.params.id;
            Blog.findById('id').then((result) => res.render('details', {blog : result})).catch(err => console.log(err))
        })

///////////////////////////////////////////////////////////

Deleting the blog based on the Id

We can't simply use the a tag to delete the post, so we are using fetchAPI.

In posts.html
    <button class='delete' data-doc='<%= blog.id %>'>delete</button>

    <script>
        const trashcan = document.querySelector('delete');
        const endPoint = `/blogs/${trashcan.dataset.doc}`;
        fetch(endPoint, {
            method : 'DELETE'
        }).then(response => response.json())
        .then(data => window.location.href = data.redirect)
        .catch(err => console.log(data))
    </script>

In app.js
app.delete('/blogs/:id', (req, res) =>{
    Blog.findAndDelete(id)
    .then(result => {
        res.json({redirect : '/blogs'})
    }).catch(err => {
        console.log(err)
    })
})
