                                            3.Status code

-> Status code describe the type of response sent to the browser
        -> 200 - Ok
        -> 301 - Resource moved
        -> 404 - Not Found
        -> 500 - internal server error

Status code
        100 Range --> informational response
        200 Range --> success codes
        300 Range --> code for redirects
        400 Range --> user or client error codes
        500 Range --> server error codes

////////////////////////////////////////////////////////////
setting the status code for every response

 In server.js
    const http = require('http');
    const fs = require('fs'); // importing the file odule to read the index.html file

    const server = http.createServer((req, res) =>{
        //set the header content type
        res.setHeader('content-type', 'text/html')

        let path = '';
        switch(req.ur){
            case '/' :
            path = 'index.html';
            res.statusCode = 200
            break;

            case '/about' :
            path = 'about.html';
            res.statusCode = 200
            break;

            // redirecting /about-me to about
            case "/about-me" :
            res.statusCode = 301
            res.setHeader('Location', '/about')
            res.end()
            
            default :
            path = '404.html';
            res.statusCode = 404
            break;
        }

        //reading the  html file
        fs.readFile(path, (err, data) =>{
            if(err){
                console.log(err);
            }else{
                res.write(data);
                res.end();
            }
        })

    });

    server.listen(3000, 'localhost', () =>{
    console.log('listening for request on port 3000')
})